{"version":3,"sources":["redux/cake/cakeReducer.js","redux/cake/cakeTypes.js","redux/iceCream/iceCreamReducer.js","redux/iceCream/iceCreamTypes.js","redux/user/userReducer.js","redux/user/userTypes.js","redux/rootReducer.js","redux/store.js","redux/cake/cakeActions.js","redux/user/userActions.js","components/CakeContainer.js","components/IceCreamContainer.js","redux/iceCream/iceCreamActions.js","components/NewCakeContainer.js","components/ItemContainer.js","components/UserContainer.js","App.js","serviceWorker.js","index.js"],"names":["initialState","numOfCakes","cakeReducer","state","action","type","payload","numOfIceCreams","iceCreamReducer","loading","users","error","reducer","rootReducer","combineReducers","cake","iceCream","user","userReducer","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","buyCake","number","fetchUsersRequest","fetchUsersSuccess","fetchUsersFailure","connect","dispatch","props","onClick","buyIceCream","useState","setNumber","value","onChange","e","target","ownProps","buyItem","item","userData","fetchUsers","axios","get","then","response","data","catch","message","useEffect","map","name","App","className","UserContainer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.4722c41f.chunk.js","sourcesContent":["import { BUY_CAKE } from \"./cakeTypes\";\n\nconst initialState = {\n      numOfCakes: 10\n}\n\nconst cakeReducer = (state = initialState, action )=>{\n      switch(action.type) {\n      case BUY_CAKE: return {\n            ...state,\n            numOfCakes:state.numOfCakes - action.payload\n      }\n      default: return state\n      }\n}\n\nexport default cakeReducer;","export const BUY_CAKE = \"BUY_CAKE\"","import { BUY_ICECREAM } from \"./iceCreamTypes\";\n\nconst initialState = {\n      numOfIceCreams: 20\n}\n\nconst iceCreamReducer = (state = initialState, action )=>{\n      switch(action.type) {\n      case BUY_ICECREAM: return {\n            ...state,\n            numOfIceCreams:state.numOfIceCreams -1\n      }\n      default: return state\n      }\n}\n\nexport default iceCreamReducer;","export const BUY_ICECREAM = \"BUY_ICECREAM\";\n","import {\n      FETCH_USERS_REQUEST,\n      FETCH_USERS_SUCCESS,\n      FETCH_USERS_FAILURE\n    } from './userTypes'\n    \n    const initialState = {\n      loading: false,\n      users: [],\n      error: ''\n    }\n    \n    const reducer = (state = initialState, action) => {\n      switch (action.type) {\n        case FETCH_USERS_REQUEST:\n          return {\n            ...state,\n            loading: true\n          }\n        case FETCH_USERS_SUCCESS:\n          return {\n            loading: false,\n            users: action.payload,\n            error: ''\n          }\n        case FETCH_USERS_FAILURE:\n          return {\n            loading: false,\n            users: [],\n            error: action.payload\n          }\n        default: return state\n      }\n    }\n    \n    export default reducer","export const FETCH_USERS_REQUEST = \"FETCH_USERS_REQUEST\"\nexport const FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\"\nexport const FETCH_USERS_FAILURE = \"FETCH_USERS_FAILURE\"\n","import { combineReducers } from \"redux\";\nimport cakeReducer from \"./cake/cakeReducer\";\nimport iceCreamReducer from \"./iceCream/iceCreamReducer\";\nimport userReducer from \"./user/userReducer\";\nconst rootReducer = combineReducers({\n      cake: cakeReducer,\n      iceCream: iceCreamReducer,\n      user: userReducer\n})\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(logger, thunk)));\n\nexport default store","import { BUY_CAKE } from \"./cakeTypes\";\n\nexport const buyCake = (number =1) =>{\n      return {\n            type: BUY_CAKE,\n            payload: number\n      }\n}","import axios from 'axios'\nimport {\n  FETCH_USERS_REQUEST,\n  FETCH_USERS_SUCCESS,\n  FETCH_USERS_FAILURE\n} from './userTypes'\n\nexport const fetchUsers = () => {\n  return (dispatch) => {\n    dispatch(fetchUsersRequest())\n    axios.get('https://jsonplaceholder.typicode.com/users')\n      .then(response => {\n        // response.data is the users\n        const users = response.data\n        dispatch(fetchUsersSuccess(users))\n      })\n      .catch(error => {\n        // error.message is the error message\n        dispatch(fetchUsersFailure(error.message))\n      })\n  }\n}\n\nexport const fetchUsersRequest = () => {\n  return {\n    type: FETCH_USERS_REQUEST\n  }\n}\n\nexport const fetchUsersSuccess = users => {\n  return {\n    type: FETCH_USERS_SUCCESS,\n    payload: users\n  }\n}\n\nexport const fetchUsersFailure = error => {\n  return {\n    type: FETCH_USERS_FAILURE,\n    payload: error\n  }\n}","import React from 'react';\nimport { buyCake } from \"../redux\";\nimport { connect } from \"react-redux\";\nfunction CakeContainer(props) {\n      return(\n            <div>\n                  <h2>Number of Cakes -{props.numOfCakes}</h2>\n                  <button onClick={props.buyCake}>Buy Cake</button>\n            </div>\n      )\n}\n\nconst mapStateToProps = state => {\n      return{\n            numOfCakes: state.cake.numOfCakes\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n      return{\n            buyCake: () => dispatch(buyCake())\n      }\n}\n\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)\n(CakeContainer);","import React from 'react';\nimport { buyIceCream } from \"../redux\";\nimport { connect } from \"react-redux\";\nfunction IceCreamContainer(props) {\n      return(\n            <div>\n                  <h2>Number of Ice Creams -{props.numOfIceCreams}</h2>\n                  <button onClick={props.buyIceCream}>Buy Ice Cream</button>\n            </div>\n      )\n}\n\nconst mapStateToProps = state => {\n      return{\n            numOfIceCreams: state.iceCream.numOfIceCreams\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n      return{\n            buyIceCream: () => dispatch(buyIceCream())\n      }\n}\n\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)\n(IceCreamContainer);","import { BUY_ICECREAM } from \"./iceCreamTypes\";\n\nexport const buyIceCream = () =>{\n      return {\n            type: BUY_ICECREAM\n      }\n}","import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { buyCake } from \"../redux\";\nfunction NewCakeContainer(props) {\n      const [number, setNumber ] = useState(1)\n      return(\n            <div>\n                  <h2>Number of Cakes -{props.numOfCakes}</h2>\n                  <input type=\"text\" value={number} onChange={e => setNumber (e.target.value)}></input>\n                  <button onClick={()=> props.buyCake(number)}>Buy {number} Cake</button>\n            </div>\n      )\n}\n\nconst mapStateToProps = state => {\n      return{\n            numOfCakes: state.cake.numOfCakes\n      }\n}\n\nconst mapDispatchToProps = dispatch => {\n      return{\n            buyCake:number => dispatch(buyCake(number))\n      }\n}\n\n\nexport default connect(\n      mapStateToProps,\n      mapDispatchToProps\n)\n(NewCakeContainer);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { buyCake, buyIceCream } from \"../redux\";\nfunction ItemContainer(props) {\n      return (\n            <div>\n                  <h2>Item - {props.item}</h2>\n                  <button onClick={props.buyItem}> Buy Items</button>\n            </div>\n      )\n}\nconst mapStateToProps = (state, ownProps) => {\n      const itemState = ownProps.cake ? state.cake.numOfCakes : state.iceCream.numOfIceCreams\n      return {\n            item: itemState\n      }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n      const dispatchFunction = ownProps.cake ? () => dispatch(buyCake()) : () => dispatch(buyIceCream())\n      return {\n            buyItem: dispatchFunction\n      }\n}\n\nexport default connect(null, mapDispatchToProps)(ItemContainer);","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { fetchUsers } from '../redux'\n\nfunction UsersContainer ({ userData, fetchUsers }) {\n  useEffect(() => {\n    fetchUsers()\n  }, [])\n  return userData.loading ? (\n    <h2>Loading</h2>\n  ) : userData.error ? (\n    <h2>{userData.error}</h2>\n  ) : (\n    <div>\n      <h2>Users List</h2>\n      <div>\n        {userData &&\n          userData.users &&\n          userData.users.map(user => <p>{user.name}</p>)}\n      </div>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    userData: state.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchUsers: () => dispatch(fetchUsers())\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UsersContainer)\n","import React from 'react';\nimport './App.css';\nimport store from \"./redux/store\";\nimport { Provider} from \"react-redux\";\nimport HooksCakeContainer from \"./components/HooksCakeContainer\";\nimport CakeContainer from \"./components/CakeContainer\";\nimport IceCreamContainer from \"./components/IceCreamContainer\";\nimport NewCakeContainer from \"./components/NewCakeContainer\";\nimport ItemContainer from \"./components/ItemContainer\";\nimport UserContainer from \"./components/UserContainer\"; \n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n    <UserContainer />\n    {/*\n    <ItemContainer cake />\n    <ItemContainer />\n    <HooksCakeContainer />\n    <CakeContainer />\n    <IceCreamContainer /> \n    <NewCakeContainer />\n    */}\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}